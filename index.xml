<?xml version="1.0" encoding="utf-8" standalone="yes"?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>Today I Learned</title>
    <link>https://haleyjung.github.io/</link>
    <description>Recent content on Today I Learned</description>
    <generator>Hugo -- gohugo.io</generator>
    <language>en-us</language>
    <copyright>&lt;a href=&#34;https://creativecommons.org/licenses/by-nc/4.0/&#34; target=&#34;_blank&#34; rel=&#34;noopener&#34;&gt;CC BY-NC 4.0&lt;/a&gt;</copyright>
    <lastBuildDate>Sat, 08 Jan 2022 14:38:40 -0500</lastBuildDate><atom:link href="https://haleyjung.github.io/index.xml" rel="self" type="application/rss+xml" />
    <item>
      <title>Jasmine</title>
      <link>https://haleyjung.github.io/posts/2022/01/jasmine/</link>
      <pubDate>Sat, 08 Jan 2022 14:38:40 -0500</pubDate>
      
      <guid>https://haleyjung.github.io/posts/2022/01/jasmine/</guid>
      <description>What is Jasmine? Jasmine is an open-source testing framework for JavaScript. With this tool we are able to describe the code we are testing and make assertions about our code. In the early 2000s, JsUnit was a framework for testing JavaScript applications. It was upgraded and released as Jasmine in 2010 by Pivotal Labs.
It is a Behavior Driven Development testing framework: i.e. Regardless of which JavaScript framework I use (e.</description>
    </item>
    
    <item>
      <title>Hugo</title>
      <link>https://haleyjung.github.io/posts/2021/12/hugo/</link>
      <pubDate>Sun, 12 Dec 2021 15:32:37 -0500</pubDate>
      
      <guid>https://haleyjung.github.io/posts/2021/12/hugo/</guid>
      <description>What is Hugo? It&amp;rsquo;s one of the static site generators alongside jekyll and hexo.
How to add a new post $ hugo new posts/name.md Localhost preview $ hugo server -D Git push $ hugo -t theme-name $ cd public $ git add . $ git commit -m &amp;#34;commit message&amp;#34; $ git push origin master $ cd .. $ git add . $ git commit -m &amp;#34;commit message&amp;#34; $ git push origin master </description>
    </item>
    
    <item>
      <title>Higher Order Functions</title>
      <link>https://haleyjung.github.io/posts/2021/12/higher-order-functions/</link>
      <pubDate>Fri, 10 Dec 2021 20:32:49 -0500</pubDate>
      
      <guid>https://haleyjung.github.io/posts/2021/12/higher-order-functions/</guid>
      <description>First Class Functions (Function Literal) In JavaScript functions are first-class, meaning anything that can be done to other types can be done to functions. This means that the language supports constructing new functions during the execution of a program, storing them in data structures, passing them as arguments to other functions, and returning them as the values of other functions.
Define Higher Order Functions  Higher order function takes another function as an argument or returns another function or does both It is often used to:c  Abstract or isolate functionality Create utiltiy functions taht are relatively generic and can operate on a variety of data types Make code more semantic and easiser to read   Examples:  Callback functions Event listeners Promises    </description>
    </item>
    
    <item>
      <title>Cache</title>
      <link>https://haleyjung.github.io/posts/2021/12/cache/</link>
      <pubDate>Sat, 04 Dec 2021 22:03:44 -0500</pubDate>
      
      <guid>https://haleyjung.github.io/posts/2021/12/cache/</guid>
      <description>Cache (‘cash’) A reserved space location that collects temporary data that makes a device, browser, or app run faster and more efficiently After opening an app or website for the first time, a cache stashes files, images, and other pertinent data on the device. For every subsequent visit, the cached data will be quickly retrieved instead of locally redownloading the data every single time.
3 main areas of cache Devices and software The CPU, central processing unit, which is the core component responsible for processing information from the software in the desktop computer, laptop, smartphone or tablet, has its own cache.</description>
    </item>
    
    <item>
      <title>Naming Convention</title>
      <link>https://haleyjung.github.io/posts/2021/12/naming-convention/</link>
      <pubDate>Wed, 01 Dec 2021 21:45:06 -0500</pubDate>
      
      <guid>https://haleyjung.github.io/posts/2021/12/naming-convention/</guid>
      <description>Define Naming conventions are systems of rules to use when naming variables, constants, methods, and other components of codes. With consistent application, it makes code easier to read, understand, and search.
Principal Terms  class: in object-oriented programming, a category of related objects that share common variables and methods. constant: in computer programming, a value that does not change, or an identifier assigned to represent such a value. method: in object-oriented programming, a procedure or function specific to objects of a particular class.</description>
    </item>
    
    <item>
      <title>Recommendation Engine: Netflix&#39;s Recommendation Algorithms</title>
      <link>https://haleyjung.github.io/posts/2021/11/recommendation-engine-netflixs-recommendation-algorithms/</link>
      <pubDate>Fri, 26 Nov 2021 14:06:25 -0500</pubDate>
      
      <guid>https://haleyjung.github.io/posts/2021/11/recommendation-engine-netflixs-recommendation-algorithms/</guid>
      <description>Netflix&amp;rsquo;s Recommendation Algorithms Overview  Recommendation algorithms are at the core of the Netflix product. They provide our members with personalized suggestions to reduce the amount of time and frustration to find something great content to watch. Because of the importance of our recommendations, we continually seek to improve them by advancing the state-of-the-art in the field. We do this by using the data about what content our members watch and enjoy along with how they interact with our service to get better at figuring out what the next great movie or TV show for them will be.</description>
    </item>
    
    <item>
      <title>Recommendation Engine: Measurements and Challenges</title>
      <link>https://haleyjung.github.io/posts/2021/11/recommendation-engine-measurements-and-challenges/</link>
      <pubDate>Fri, 26 Nov 2021 13:38:29 -0500</pubDate>
      
      <guid>https://haleyjung.github.io/posts/2021/11/recommendation-engine-measurements-and-challenges/</guid>
      <description>In this post, I&amp;rsquo;ll dive further into the measurements and challenges of a recommendation engine. This post uses references from:
F.O. Isinkaye et al., &amp;ldquo;Recommendation systems: Principles, methods and evaluation,&amp;rdquo; Egyptian Informatics Journal, Cairo University, 13 March 2015.
&amp;ldquo;The Netflix Recommender System: Algorithms, Business Value, and Innovation&amp;rdquo;, ACM Transactions on Management Information Systems, Vol. 6, No. 4, Article 13, December 2015.
To note, I&amp;rsquo;ll be continuously adding more of the latest articles as references.</description>
    </item>
    
    <item>
      <title>Recommendation Engine: The Introduction</title>
      <link>https://haleyjung.github.io/posts/2021/11/recommendation-engine-the-introduction/</link>
      <pubDate>Thu, 25 Nov 2021 16:56:37 -0500</pubDate>
      
      <guid>https://haleyjung.github.io/posts/2021/11/recommendation-engine-the-introduction/</guid>
      <description>I&amp;rsquo;m at the airport right now, summarizing what I read on the plane about recommendation engine algorithm, as I wait for my next flight. Last night, I opened the Netflix app to download shows I will watch on the plane. I then saw a new feature in the &amp;lsquo;Downloads&amp;rsquo; section that will download a personalized selection of movies and shows for me so that there is always a show for me to watch with or without internet connection!</description>
    </item>
    
    <item>
      <title>Missing Contributions on Github</title>
      <link>https://haleyjung.github.io/posts/2021/11/missing-contributions-on-github/</link>
      <pubDate>Wed, 24 Nov 2021 00:03:33 -0500</pubDate>
      
      <guid>https://haleyjung.github.io/posts/2021/11/missing-contributions-on-github/</guid>
      <description>Why are my contributions missing? After multiple commits on my GitHub for this static site, I noticed that the contributions were not lightening green on my profile. The GitHub page was successfully updated with the latest commit, so at first I thought it was a time lag. GitHub Docs also indicates that &amp;ldquo;you may need to wait for up to 24 hours to see the contribution appear on your contribution graph.</description>
    </item>
    
    <item>
      <title>Submodules</title>
      <link>https://haleyjung.github.io/posts/2021/11/submodules/</link>
      <pubDate>Tue, 23 Nov 2021 16:40:02 -0500</pubDate>
      
      <guid>https://haleyjung.github.io/posts/2021/11/submodules/</guid>
      <description>What is a submodule? A git submodule is a record within a host git repository that points to a specific commit in another external repository. Submodules are very static and only track specific commits. Submodules do not track git refs or branches and are not automatically updated when the host repository is updated.
  It keeps a git repository as a subdirectory of another git repository.
  It serves as a reference to another repo at a particular snapshot of time.</description>
    </item>
    
  </channel>
</rss>

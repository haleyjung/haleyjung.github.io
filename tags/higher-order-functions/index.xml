<?xml version="1.0" encoding="utf-8" standalone="yes"?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>Higher Order Functions on Today I Learned</title>
    <link>https://haleyjung.github.io/tags/higher-order-functions/</link>
    <description>Recent content in Higher Order Functions on Today I Learned</description>
    <generator>Hugo -- gohugo.io</generator>
    <language>en-us</language>
    <copyright>&lt;a href=&#34;https://creativecommons.org/licenses/by-nc/4.0/&#34; target=&#34;_blank&#34; rel=&#34;noopener&#34;&gt;CC BY-NC 4.0&lt;/a&gt;</copyright>
    <lastBuildDate>Fri, 10 Dec 2021 20:32:49 -0500</lastBuildDate><atom:link href="https://haleyjung.github.io/tags/higher-order-functions/index.xml" rel="self" type="application/rss+xml" />
    <item>
      <title>Higher Order Functions</title>
      <link>https://haleyjung.github.io/posts/2021/12/higher-order-functions/</link>
      <pubDate>Fri, 10 Dec 2021 20:32:49 -0500</pubDate>
      
      <guid>https://haleyjung.github.io/posts/2021/12/higher-order-functions/</guid>
      <description>JavaScript will always pass PRIMITIVE types &amp;lsquo;by value&amp;rsquo; JavaScript will always pass NON-PRIMITIVE types &amp;lsquo;by reference&amp;rsquo;  First Class Functions (Function Literal) In JavaScript functions are first-class, meaning anything that can be done to other types can be done to functions. This means that the language supports constructing new functions during the execution of a program, storing them in data structures, passing them as arguments to other functions, and returning them as the values of other functions.</description>
    </item>
    
  </channel>
</rss>

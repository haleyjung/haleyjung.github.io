<?xml version="1.0" encoding="utf-8" standalone="yes"?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>Redux on Today I Learned</title>
    <link>https://haleyjung.github.io/tags/redux/</link>
    <description>Recent content in Redux on Today I Learned</description>
    <generator>Hugo -- gohugo.io</generator>
    <language>en-us</language>
    <copyright>&lt;a href=&#34;https://creativecommons.org/licenses/by-nc/4.0/&#34; target=&#34;_blank&#34; rel=&#34;noopener&#34;&gt;CC BY-NC 4.0&lt;/a&gt;</copyright>
    <lastBuildDate>Wed, 09 Mar 2022 00:40:48 -0500</lastBuildDate><atom:link href="https://haleyjung.github.io/tags/redux/index.xml" rel="self" type="application/rss+xml" />
    <item>
      <title>Understanding Redux</title>
      <link>https://haleyjung.github.io/posts/2022/03/understanding-redux/</link>
      <pubDate>Wed, 09 Mar 2022 00:40:48 -0500</pubDate>
      
      <guid>https://haleyjung.github.io/posts/2022/03/understanding-redux/</guid>
      <description>Redux: Predictable State Container for JavaScript apps
 I&amp;rsquo;ve just finished a two-day sprint using React, and will be moving onto using Redux with React. So here are some fundamentals of Redux before the next sprint.
What is it?  Predictable State Container for JavaScript apps A JS library for managing global application state  Has packages including: React-Redux, Redux Toolkit, and Redux DevTools Extension   Uses a one-way data flow app structure Reduces server calls: only made when state change requires the server call  Key Points  Predictable  Helps applications to behave consistently Runs in different environments: client, server, native   Centralized  States can be used from any components (instead of lifting state to parent components) const rootReducer = Redux.</description>
    </item>
    
  </channel>
</rss>
